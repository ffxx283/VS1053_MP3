
//_____________________________________________________________
//
	.sect code,I2CWrite	// 116 words
	.export _I2CWrite
_I2CWrite:
F0B55:
	ldx (I6)+2,NULL	// I6 += 2
	stx I6,(I6)
	sty I4,(I6)
	ldx (I6),I4
	ldx (I6)+1,NULL	// I6 += 1
	stx A1,(I6)
	sty B0,(I6)+1
	stx B1,(I6)
	sty I0,(I6)+1
	stx LC,(I6)
	sty LS,(I6)+1
	stx LE,(I6)
F0B2:
// (i=0; i<8; i++)
	and NULL,NULL,A0	// 0 -> 'i'
F0B51:
	ldx (I4)-2,NULL	// I4 += -2
	ldx (I4)+2,A1	// unspill 'b' from #-2
	j F0B6
	nop
// jumped away
F0B6:	// (loop lvl 2)
	ldc 8,B0	// 8 -> 1 -> ET1
	sub A0,B0,B0	// 'i' >= ET1 -> AT33
	nop
	jcs F0B4	// unsigned compare
	nop
// jumped away
F0B3:	// (loop lvl 2)
// ;
// 	}
// {
// 		if (b & (1 << (7-i)))
	ldc 7,B0	// 7 -> 1 -> ET3
	sub B0,A0,B1	// ET3 - 'i' -> ET4
	sub NULL,ONES,B0	// 1 -> 0 -> ET2
	ashl B0,B1,B0	// ET2 << ET4 -> ET5
	and A1,B0,B0	// 'b' and ET5 -> ET7
	nop
	jzs F0B8	// compare against zero
	nop
// jumped away
F0B7:	// (loop lvl 2)
// ;
// 		}
// ;}

// {
// {{(*(__x volatile u_int16 *)(u_int16)(0xC019)) |= (((1<<4)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B0/*V*/	// ET9 ==> ETa
	ldc 16,B1	// 16 -> 1 -> ET8
	or B0,B1,B0	// ETa or ET8 -> ETb
	stx B0,(I0)/*V*/	// ETb ==> ET9

// (i=0; i<10000; i++)
F0B49:	// (loop lvl 2)
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F0B11-1
	nop
//loop resumes
F0B13:	// loop entry
F0B10:	// (loop lvl 3)
// {}
//	(1 nop's needed)
	nop
// loop end
F0B11:	// loop exit
F0B9:	// (loop lvl 2)
// ;}

// {{(*(__x volatile u_int16 *)(u_int16)(0xC019)) |= (((1<<6)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B1/*V*/	// ET9 ==> ET16
	ldc 64,B0	// 64 -> 1 -> ET15
	or B1,B0,B0	// ET16 or ET15 -> ET17
	stx B0,(I0)/*V*/	// ET17 ==> ET9

// (i=0; i<10000; i++)
F0B48:	// (loop lvl 2)
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F0B19-1
	nop
//loop resumes
F0B21:	// loop entry
F0B18:	// (loop lvl 3)
// {}
//	(1 nop's needed)
	nop
// loop end
F0B19:	// loop exit
// ;}

// ;
// {{(*(__x volatile u_int16 *)(u_int16)(0xC019)) &= ~(((1<<6)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B1/*V*/	// ET9 ==> ET1b
	ldc 65471,B0	// 65471 -> 1 -> ET1a
	and B1,B0,B0	// ET1b and ET1a -> ET1c
	stx B0,(I0)/*V*/	// ET1c ==> ET9

// (i=0; i<10000; i++)
F0B47:	// (loop lvl 2)
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F0B23-1
	nop
//loop resumes
F0B25:	// loop entry
F0B22:	// (loop lvl 3)
// {}
//	(1 nop's needed)
	nop
// loop end
F0B23:	// loop exit
	sub A0,ONES,A0	// 'i' - (-1) -> 'i'
	j F0B6
	nop
// jumped away
F0B8:	// (loop lvl 2)
// ;
// 		}
// ;}

// else {
// {{(*(__x volatile u_int16 *)(u_int16)(0xC019)) &= ~(((1<<4)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B0/*V*/	// ET9 ==> ET11
	ldc 65519,B1	// 65519 -> 1 -> ET10
	and B0,B1,B0	// ET11 and ET10 -> ET12
	stx B0,(I0)/*V*/	// ET12 ==> ET9

// (i=0; i<10000; i++)
F0B50:	// (loop lvl 2)
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F0B15-1
	nop
//loop resumes
F0B17:	// loop entry
F0B14:	// (loop lvl 3)
// {}
//	(1 nop's needed)
	nop
// loop end
F0B15:	// loop exit
	j F0B9
	nop
// jumped away
F0B4:

// {(*(__x volatile u_int16 *)(u_int16)(0xC017)) &= ~(((1<<4)));
	ldc 49175,I0	// 49175 -> ET21
	ldx (I0),A1/*V*/	// ET21 ==> ET22
	ldc 65519,A0	// 65519 -> 1 -> ET10
	and A1,A0,A0	// ET22 and ET10 -> ET23
	stx A0,(I0)/*V*/	// ET23 ==> ET21
// ;}

// ;
// {{(*(__x volatile u_int16 *)(u_int16)(0xC019)) |= (((1<<6)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),A1/*V*/	// ET9 ==> ET24
	ldc 64,A0	// 64 -> 1 -> ET15
	or A1,A0,A0	// ET24 or ET15 -> ET25
	stx A0,(I0)/*V*/	// ET25 ==> ET9

// (i=0; i<10000; i++)
F0B46:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F0B27-1
	nop
//loop resumes
F0B29:	// loop entry
F0B26:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F0B27:	// loop exit
// ;
// 	if (((*(__x volatile u_int16 *)(u_int16)(0xC018)) & (((1<<4)))))
	ldc 49176,I0	// 49176 -> ET28
	ldx (I0),A1/*V*/	// ET28 ==> ET29
	ldc 16,A0	// 16 -> 1 -> ET8
	and A1,A0,A0	// ET29 and ET8 -> ET2b
	nop
	jzc F0B30	// compare against zero
	nop
// jumped away
F0B31:
// 	}
// else {
// 		i=1;
	sub NULL,ONES,A0	// 1 -> 'i'
F0B32:
// ;}

// {{(*(__x volatile u_int16 *)(u_int16)(0xC019)) &= ~(((1<<6)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B0/*V*/	// ET9 ==> ET2c
	ldc 65471,A1	// 65471 -> 1 -> ET1a
	and B0,A1,A1	// ET2c and ET1a -> ET2d
	stx A1,(I0)/*V*/	// ET2d ==> ET9

// (i=0; i<10000; i++)
F0B45:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F0B34-1
	nop
//loop resumes
F0B36:	// loop entry
F0B33:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F0B34:	// loop exit

// ;
// {(*(__x volatile u_int16 *)(u_int16)(0xC017)) |= (((1<<4)));
	ldc 49175,I0	// 49175 -> ET21
	ldx (I0),B0/*V*/	// ET21 ==> ET30
	ldc 16,A1	// 16 -> 1 -> ET8
	or B0,A1,A1	// ET30 or ET8 -> ET31
	stx A1,(I0)/*V*/	// ET31 ==> ET21
// ;
// 	return i;
F0B1:
	ldx (I6)-1,LE
	ldy (I6),LS
	ldx (I6)-1,LC
	ldy (I6),I0
	ldx (I6)-1,B1
	ldy (I6),B0
	ldx (I6)-1,A1
	ldx (I4),I6
	ldy (I4),I4
	ldx (I6)-2,NULL	// I6 += -2
	jr
	nop
// jumped away
F0B30:
// 	}
// {
// 		i=0;
	and NULL,NULL,A0	// 0 -> 'i'
	j F0B32
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,I2CSetFM	// 132 words
	.export _I2CSetFM
_I2CSetFM:
F1B40:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6)
	sty I4,(I6)
	ldx (I6),I4
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)
	sty A1,(I6)+1
	stx B0,(I6)
	sty B1,(I6)+1
	stx C0,(I6)
	sty C1,(I6)+1
	stx I0,(I6)
	sty LC,(I6)+1
	stx LS,(I6)
	sty LE,(I6)
F1B2:
	ldx (I4)-2,NULL	// I4 += -2
// fmFrq
	ldc 10000,A1	// 10000 lsw ET2
	ldx (I4)+2,A0	// unspill 'frq10k' from #0
	muluu A0,A1	// 'frq10k' * ET2 -> 'fmFrq'
	add NULL,P,A	// 16x16->32bit
// frqReg

// (*(__x volatile u_int16 *)(u_int16)(0xC017)) |= ((1<<5));
	ldc 49175,I0	// 49175 -> ET6
	ldx (I0),B1/*V*/	// ET6 ==> ET7
	ldc 32,B0	// 32 -> 1 -> ET5
	or B1,B0,B1	// ET7 or ET5 -> ET8
	stx B1,(I0)/*V*/	// ET8 ==> ET6

// ;
// {(*(__x volatile u_int16 *)(u_int16)(0xC019)) |= ((1<<5));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B1/*V*/	// ET9 ==> ETa
	or B1,B0,B0	// ETa or ET5 -> ETb
	stx B0,(I0)/*V*/	// ETb ==> ET9

// (i=0; i<10000; i++)
F1B39:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F1B4-1
	nop
//loop resumes
F1B6:	// loop entry
F1B3:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F1B4:	// loop exit

// ;
// {(*(__x volatile u_int16 *)(u_int16)(0xC019)) &= ~((1<<5));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),B1/*V*/	// ET9 ==> ET11
	ldc 65503,B0	// 65503 -> 1 -> ET10
	and B1,B0,B0	// ET11 and ET10 -> ET12
	stx B0,(I0)/*V*/	// ET12 ==> ET9
// ;
// 	fmFrq += 225000;
	ldc 28392,B0	// 28392 -> 3 -> B0
	ldc 3,B1	// 3 -> B1
	add A,B,B	// 'fmFrq' + ET13 -> 'fmFrq'
// 	frqReg = (u_int16)(fmFrq / 8192UL);
	ldc -13,A0	// -13 -> AT16
	ashl B,A0,A	// 'fmFrq' << AT16 -> ET17
	add A0,NULL,A1	// ET17 lsw 'frqReg'
// ;}
// ;}

// {{{(*(__x volatile u_int16 *)(u_int16)(0xC019)) &= ~(((1<<4)));
	ldx (I0),A0/*V*/	// ET9 ==> ET1a
	ldc 65519,B0	// 65519 -> 1 -> ET19
	and A0,B0,A0	// ET1a and ET19 -> ET1b
	stx A0,(I0)/*V*/	// ET1b ==> ET9

// (i=0; i<10000; i++)
F1B38:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F1B8-1
	nop
//loop resumes
F1B10:	// loop entry
F1B7:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F1B8:	// loop exit
// ;}

// ;{{(*(__x volatile u_int16 *)(u_int16)(0xC019)) &= ~(((1<<6)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),A0/*V*/	// ET9 ==> ET1f
	ldc 65471,B0	// 65471 -> 1 -> ET1e
	and A0,B0,A0	// ET1f and ET1e -> ET20
	stx A0,(I0)/*V*/	// ET20 ==> ET9

// (i=0; i<10000; i++)
F1B37:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F1B12-1
	nop
//loop resumes
F1B14:	// loop entry
F1B11:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F1B12:	// loop exit
	ldx (I6)+1,NULL	// I6 += 1
// ;
// 	I2CWrite(0xc0);
	ldc 192,B0	// 192 -> 1 -> ET23
	stx B0,(I6)	// ET23
	call _I2CWrite
	nop
// jumped away
F1B15:
	ldx (I6)+1,NULL	// I6 += 1
	ldx (I6)-1,NULL	// I6 += -1
//  I2CWrite( ((frqReg>>8) & 0x3f));
	ldc -8,A0	// -8 -> 0 -> ET26
	add A1,NULL,C0	// 'frqReg' msw AT3c
	and C1,NULL,C1
	ashl C,A0,C	// AT3c <- ET26 -> AT3d
	ldc 63,A0	// 63 -> 1 -> ET28
	and C0,A0,A0	// ET27 and ET28 -> ET29
	stx A0,(I6)	// ET29
	call _I2CWrite
	nop
// jumped away
F1B16:
	ldx (I6)+1,NULL	// I6 += 1
	ldx (I6)-1,NULL	// I6 += -1
//  I2CWrite((frqReg&0xff));
	ldc 255,A0	// 255 -> 1 -> ET2b
	and A1,A0,A0	// 'frqReg' and ET2b -> ET2c
	stx A0,(I6)	// ET2c
	call _I2CWrite
	nop
// jumped away
F1B17:
	ldx (I6)+1,NULL	// I6 += 1
	ldx (I6)-1,NULL	// I6 += -1
//  I2CWrite((1<<7) |(1<<6) |(1<<4)  |(1<<3));
	ldc 216,A0	// 216 -> 1 -> ET2e
	stx A0,(I6)	// ET2e
	call _I2CWrite
	nop
// jumped away
F1B18:
	ldx (I6)+1,NULL	// I6 += 1
	ldx (I6)-1,NULL	// I6 += -1
//  I2CWrite((1<<4));
	ldc 16,A0	// 16 -> 1 -> ET30
	stx A0,(I6)	// ET30
	call _I2CWrite
	nop
// jumped away
F1B19:
	ldx (I6)+1,NULL	// I6 += 1
	ldx (I6)-1,NULL	// I6 += -1
//  I2CWrite((1<<7) |(1<<6));
	stx B0,(I6)	// ET23
	call _I2CWrite
	nop
// jumped away
F1B20:
	ldx (I6)-1,NULL	// I6 += -1
// ;}
// ;}

// {{{(*(__x volatile u_int16 *)(u_int16)(0xC019)) |= (((1<<6)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),A1/*V*/	// ET9 ==> ET34
	ldc 64,A0	// 64 -> 1 -> ET33
	or A1,A0,A0	// ET34 or ET33 -> ET35
	stx A0,(I0)/*V*/	// ET35 ==> ET9

// (i=0; i<10000; i++)
F1B36:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F1B22-1
	nop
//loop resumes
F1B24:	// loop entry
F1B21:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F1B22:	// loop exit
// ;}

// ;{{(*(__x volatile u_int16 *)(u_int16)(0xC019)) |= (((1<<4)));
	ldc 49177,I0	// 49177 -> ET9
	ldx (I0),A1/*V*/	// ET9 ==> ET38
	ldc 16,A0	// 16 -> 1 -> ET30
	or A1,A0,A0	// ET38 or ET30 -> ET39
	stx A0,(I0)/*V*/	// ET39 ==> ET9

// (i=0; i<10000; i++)
F1B35:
	ldc 9999,LC	// loop 10000 iterations
	loop LC,F1B26-1
	nop
//loop resumes
F1B28:	// loop entry
F1B25:	// (loop lvl 2)
// {}
//	(1 nop's needed)
	nop
// loop end
F1B26:	// loop exit
F1B1:
	ldy (I6),LE
	ldx (I6)-1,LS
	ldy (I6),LC
	ldx (I6)-1,I0
	ldy (I6),C1
	ldx (I6)-1,C0
	ldy (I6),B1
	ldx (I6)-1,B0
	ldy (I6),A1
	ldx (I6)-1,A0
	ldx (I4),I6
	ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

	.end
